<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="EL3202_0010" Id="{dc64da8e-52ce-0127-3956-bc9ada04c25c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK EL3202_0010 EXTENDS CoE_TerminalBase IMPLEMENTS I_terminal_execution
VAR_INPUT
END_VAR
VAR_OUTPUT
	AI_Temperature_channel_1 		: I_AI_Temperature :=_channel_1;
	AI_Temperature_channel_2 		: I_AI_Temperature :=_channel_2;
	AI_percent_channe_1				: I_AI_percentage := _channel_1;
	AI_percent_channe_2				: I_AI_percentage := _channel_2;
END_VAR
VAR
// == IO Mapping ==============================================================
	WcState_WcState			AT%I*: BOOL;
	InfoData_State			AT%I*: UINT;
	InfoData_AdsAddr_netId  AT%I*: AMSNETID;
	InfoData_AdsAddr_port 	AT%I*: WORD;
	
	// Channel 1
	RTD_Inputs_Channel_1_Value        			AT%I*: INT;	
	RTD_Inputs_Channel_1_Status_Underrange   	AT%I*: BOOL;
	RTD_Inputs_Channel_1_Status_Overrange   	AT%I*: BOOL;
	RTD_Inputs_Channel_1_Status_Limit_1   		AT%I*: BYTE;
	RTD_Inputs_Channel_1_Status_Limit_2   		AT%I*: BYTE;
	RTD_Inputs_Channel_1_Status_Error   		AT%I*: BOOL;
	RTD_Inputs_Channel_1_Status_TxPDO_State   	AT%I*: BOOL;
	RTD_Inputs_Channel_1_Status_TxPDO_Toggle   	AT%I*: BOOL;
	
	// Channel 2
	RTD_Inputs_Channel_2_Value        			AT%I*: INT;	
	RTD_Inputs_Channel_2_Status_Underrange   	AT%I*: BOOL;
	RTD_Inputs_Channel_2_Status_Overrange   	AT%I*: BOOL;
	RTD_Inputs_Channel_2_Status_Limit_1   		AT%I*: BYTE;
	RTD_Inputs_Channel_2_Status_Limit_2   		AT%I*: BYTE;
	RTD_Inputs_Channel_2_Status_Error   		AT%I*: BOOL;
	RTD_Inputs_Channel_2_Status_TxPDO_State   	AT%I*: BOOL;
	RTD_Inputs_Channel_2_Status_TxPDO_Toggle   	AT%I*: BOOL;
// ============================================================================

	_channel_1 : AI_Temperature_Channel(adc_min:=ADC_MIN, adc_max:=ADC_MAX, physical_min:=PHYSICAL_MIN, physical_max:=PHYSICAL_MAX, channel_number:=1);
	_channel_2 : AI_Temperature_Channel(adc_min:=ADC_MIN, adc_max:=ADC_MAX, physical_min:=PHYSICAL_MIN, physical_max:=PHYSICAL_MAX, channel_number:=2);

	_InterfaceManager 	: I_InterfaceManager;
	terminal_name 		: STRING;
	reg_errId			: HAL_ErrorEnum;
	_InitState			: INT;
END_VAR
VAR CONSTANT
	ADC_MIN        	: INT:=0;
	ADC_MAX        	: INT:=32767;
	PHYSICAL_MIN 	: INT:=0;
	PHYSICAL_MAX 	: INT:=10;
	
    HARDWARE_REVSION : UINT:=19;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE _InitState OF 
	0:  // init parent
		IF SUPER^._init_done THEN
			_InitState := 10;
		END_IF 
	10: // register channel 1 percentage interface 
		IF _InterfaceManager.register_I_AI_Percentage(_channel_1, terminal_name, channel_number := 1, errId=>reg_errId) THEN 
			_InitState := 20;
		END_IF
	20: // register channel 2 percentage interface 
		IF _InterfaceManager.register_I_AI_Percentage(_channel_2, terminal_name, channel_number := 2, errId=>reg_errId) THEN 
			_InitState := 30;
		END_IF

	30: // register channel 1 voltage interface 
		IF _InterfaceManager.register_I_AI_Percentage(_channel_1, terminal_name, channel_number := 1, errId=>reg_errId) THEN 
			_InitState := 40;
		END_IF
		
	40: // register channel 2 voltage interface 
		IF _InterfaceManager.register_I_AI_Percentage(_channel_2, terminal_name, channel_number := 2, errId=>reg_errId) THEN 
			_InitState := 50;
		END_IF
ELSE
	// Channel 1
	_channel_1.wcState							:= NOT  WcState_WcState;
	_channel_1.terminal_address 				:= _terminal_address;	
	_channel_1.terminal_value 					:= RTD_Inputs_Channel_1_Value;
	_channel_1.io_status_Underrange 			:= RTD_Inputs_Channel_1_Status_Underrange;
	_channel_1.io_status_Overrange 				:= RTD_Inputs_Channel_1_Status_Overrange;
	_channel_1.io_status_Limit_1_greater_value 	:= RTD_Inputs_Channel_1_Status_Limit_1.0;
	_channel_1.io_status_Limit_1_smaller_value	:= RTD_Inputs_Channel_1_Status_Limit_1.1;
	_channel_1.io_status_Limit_2_greater_value 	:= RTD_Inputs_Channel_1_Status_Limit_2.0;
	_channel_1.io_status_Limit_2_smaller_value	:= RTD_Inputs_Channel_1_Status_Limit_2.1;
	_channel_1.io_status_Error 					:= RTD_Inputs_Channel_1_Status_Error;
	_channel_1.io_status_TxPDO_State 			:= RTD_Inputs_Channel_1_Status_TxPDO_State;
	_channel_1.io_status_TxPDO_Toggle 			:= RTD_Inputs_Channel_1_Status_TxPDO_Toggle;
	
	// Channel 2
	_channel_2.wcState							:= NOT  WcState_WcState;
	_channel_2.terminal_address 				:= _terminal_address;	
	_channel_2.terminal_value 					:= RTD_Inputs_Channel_2_Value;
	_channel_2.io_status_Underrange 			:= RTD_Inputs_Channel_2_Status_Underrange;
	_channel_2.io_status_Overrange 				:= RTD_Inputs_Channel_2_Status_Overrange;
	_channel_2.io_status_Limit_1_greater_value 	:= RTD_Inputs_Channel_2_Status_Limit_1.0;
	_channel_2.io_status_Limit_1_smaller_value	:= RTD_Inputs_Channel_2_Status_Limit_1.1;
	_channel_2.io_status_Limit_2_greater_value 	:= RTD_Inputs_Channel_2_Status_Limit_2.0;
	_channel_2.io_status_Limit_2_smaller_value	:= RTD_Inputs_Channel_2_Status_Limit_2.1;
	_channel_2.io_status_Error 					:= RTD_Inputs_Channel_2_Status_Error;
	_channel_2.io_status_TxPDO_State 			:= RTD_Inputs_Channel_2_Status_TxPDO_State;
	_channel_2.io_status_TxPDO_Toggle 			:= RTD_Inputs_Channel_2_Status_TxPDO_Toggle;

	_channel_1();
	_channel_2();
END_CASE
]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{f249a4fa-d425-0a5a-2fba-2d3136440562}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	CoE_communication_handler: I_CoE_communication_handler;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^._CoE_communication_handler	:=CoE_communication_handler;
_channel_1.CoE_communication_handler	:=CoE_communication_handler;
_channel_2.CoE_communication_handler	:=CoE_communication_handler;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="run" Id="{5b78a16e-e9f7-0753-0f5b-6c9ef16d63f5}">
      <Declaration><![CDATA[METHOD run : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>